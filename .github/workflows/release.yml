name: Release

on:
  # You can manually run this workflow.
  workflow_dispatch:
  # This workflow runs on pushing a semantic versionized tag (e.g. v1.0.0).
  push:
    #branches:
    #  - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

# ---------------------------------------------------------------------------------------

  build:

# ---------------------------------------------------------------------------------------

    name: "Build Containers"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - { platform: "linux/amd64", folder: "amd64"   }
          - { platform: "linux/arm64", folder: "arm64v8" }

    steps:

      - name: ‚úÇÔ∏è Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.0 # https://github.com/jlumbroso/free-disk-space
        with:
          tool-cache: true
          docker-images: false

      - name: Prepare
        run: |
          platform=${{ matrix.config.platform }}
          echo "PLATFORM_ARCH=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Metadata
        id: metadata
        uses: docker/metadata-action@v5 # https://github.com/docker/metadata-action/
        with:
          images: ${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
          flavor: |
            latest=auto
            prefix=ghcr.io/,onlatest=false

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      #- name: Login to Docker Hub
      #  if: github.event_name != 'pull_request'
      #  uses: docker/login-action@v3
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üîí Login to Github Container Registry (GHCR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # https://github.com/docker/login-action
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push by Digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .devcontainer/${{ matrix.config.folder }}/
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ matrix.config.platform }}
          labels: ${{ steps.metadata.outputs.labels }}
          outputs: type=image,name=${{ github.repository }},push-by-digest=true,name-canonical=true,push=true

      - name: Export Digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload Digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_ARCH }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: üîç Run hadolint
        uses: hadolint/hadolint-action@v3.1.0 # https://github.com/hadolint/hadolint-action
        with:
          dockerfile: .devcontainer/${{ matrix.config.folder }}/Dockerfile
          no-fail: true

# ---------------------------------------------------------------------------------------

  merge:

# ---------------------------------------------------------------------------------------

    name: "Merge Metadata and Push Manifest"
    runs-on: ubuntu-latest

    needs:
      - build

    steps:

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Docker Metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}

      - name: üîí Login to Github Container Registry (GHCR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # https://github.com/docker/login-action
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and Push Manifest
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ github.repository }}@sha256:%s ' *)

      - name: üîç Inspect Manifest
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}:latest --raw

      - name: üõ°Ô∏èüîç Scan Image for Vulnerabilities
        uses: aquasecurity/trivy-action@master # https://github.com/aquasecurity/trivy-action
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: üõ°Ô∏èüîº Upload scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3 # https://github.com/github/codeql-action
        with:
          sarif_file: 'trivy-results.sarif'
